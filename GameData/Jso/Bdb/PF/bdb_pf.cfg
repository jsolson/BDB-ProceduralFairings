@PART[bluedog*,Bluedog*]:HAS[@MODULE[ModuleProceduralFairing]]:First:NEEDS[ProceduralFairings]
{
	%extraNodeShift = 0.0
}

@PART[bluedog_ableFairing]:BEFORE[Jso_Bdb_PF]:NEEDS[ProceduralFairings]
{
	@extraNodeShift = -0.0171605
}
@PART[bluedog_ablestarFairing]:BEFORE[Jso_Bdb_PF]:NEEDS[ProceduralFairings]
{
	@extraNodeShift = -0.050
}
@PART[bluedog_DeltaK_FairingTank]:BEFORE[Jso_Bdb_PF]:NEEDS[ProceduralFairings]
{
	@extraNodeShift = -0.380
}
@PART[bluedog_centaurFairing]:BEFORE[Jso_Bdb_PF]:NEEDS[ProceduralFairings]
{
	@extraNodeShift = -0.129
}
@PART[bluedog_Saturn*FairingBase]:BEFORE[Jso_Bdb_PF]:NEEDS[ProceduralFairings]
{
	@extraNodeShift = -0.05
}
@PART[bluedog_Skylab_Airlock]:BEFORE[Jso_Bdb_PF]:NEEDS[ProceduralFairings]
{
	@extraNodeShift = -1.0
}
@PART[bluedog_AtlasV_FairingBase4xx]:BEFORE[Jso_Bdb_PF]:NEEDS[ProceduralFairings]
{
	@extraNodeShift = 0.154
}

+PART[bluedog*,Bluedog*]:HAS[@MODULE[ModuleProceduralFairing]]:FOR[Jso_Bdb_PF]:NEEDS[ProceduralFairings]
{
	@name ^= :$:_PF:
	@title ^= :$: (PF):
	
	// Modifier for the base size to account for PF shrinking
	// the part by the fairing wall width.
	// Fairing wall width: 0.04 * scale size
	%extraBaseRadius = #$MODULE[ModuleProceduralFairing]/baseRadius$
	@extraBaseRadius *= 2
	@extraBaseRadius *= 0.04
	
	// Hold the original fairing diameter in tempBaseSize, and set scale
	// to the scale needed to get to 1 meter. PF expects a 1 meter part.
	// Scale is adjusted to account for fairing wall.
	%tempBaseSize = #$MODULE[ModuleProceduralFairing]/baseRadius$
	%tempScaleSize = #$tempBaseSize$
	@tempScaleSize += #$extraBaseRadius$
	@tempScaleSize *= 2 
	@tempBaseSize *= 2
	@tempScaleSize /= #$tempBaseSize$
	%scale = #$tempScaleSize$
	@scale /= #$tempBaseSize$
	%rescaleFactor = 1
	
	// Scale the node positions
	@node_stack_top[1,,] *= #$scale$
	@node_stack_bottom[1,,] *= #$scale$
	
	// Save the top node position. Everything will shift by this amount
	// to move the top node to position 0. PF starts the fairing
	// at height 0.
	%tempShift = #$node_stack_top[1,,]$
	// Part specific adjustment
	@tempShift += #$extraNodeShift$
	
	// Scale and adjust model position
	@MODEL
	{
		%position = 0.0, 0.0, 0.0
		@position[1,,] -= #$../tempShift$
		%scale = #$../scale$, $../scale$, $../scale$
	}
	
	// Adjust node positions
	@node_stack_top[1,,] -= #$tempShift$
	@node_stack_bottom[1,,] -= #$tempShift$
	
	node_stack_connect01 = 0.5, 0.000, 0.0, 0.0, 1.0, 0.0, 0
    node_stack_connect02 = 0.5, 0.000, 0.0, 0.0, 1.0, 0.0, 0
	node_stack_connect03 = 0.5, 0.000, 0.0, 0.0, 1.0, 0.0, 0
    node_stack_connect04 = 0.5, 0.000, 0.0, 0.0, 1.0, 0.0, 0
	
	MODULE
	{
		name = ProceduralFairingBase
//		baseSize = 1.15
//		sideThickness = 0.05
//		verticalStep = 0.1
	}
	
	MODULE
	{
		name = KzNodeNumberTweaker
		nodePrefix = connect
		maxNumber = 4
		numNodes = 2
//		radius = 0.625
		shouldResizeNodes = False
	}
	
	MODULE
	{
		name = KzFairingBaseResizer
		size = #$../tempBaseSize$
		costPerTonne = 1000
		specificMass = 0.0070, 0.0260, 0.0100, 0
		specificBreakingForce = 1280
		specificBreakingTorque = 1280
		dragAreaScale = 1.5
	}
	
	MODULE
	{
		name = KzFairingBaseShielding
	}
	
	!MODULE[ModuleProceduralFairing] {}
	!MODULE[ModuleCargoBay] {}
}

@PART[bluedog_DeltaK_FairingTank_PF]
{
	@node_stack_bottom2[1,,] *= #$scale$
	@node_stack_bottom2[1,,] -= #$tempShift$
}

+PART[bluedog_Saturn_3125mFairingBase]:HAS[@MODULE[ModuleProceduralFairing]]:FOR[Jso_Bdb_PF]:NEEDS[ProceduralFairings]
{
	@name ^= :$:_PF_adaptor:
	//@title ^= :$: PF Interstage Adaptor:
	@title = Sarnus-SIVB 3.75m PF Interstage Adaptor
	
	// Modifier for the base size to account for PF shrinking
	// the part by the fairing wall width.
	// Fairing wall width: 0.04 * scale size
	%extraBaseRadius = #$MODULE[ModuleProceduralFairing]/baseRadius$
	@extraBaseRadius *= 2
	@extraBaseRadius *= 0.04
	
	// Hold the original fairing diameter in tempBaseSize, and set scale
	// to the scale needed to get to 1 meter. PF expects a 1 meter part.
	// Scale is adjusted to account for fairing wall.
	%tempBaseSize = #$MODULE[ModuleProceduralFairing]/baseRadius$
	//%tempBaseSize = 1.5625
	%tempScaleSize = #$tempBaseSize$
	@tempScaleSize += #$extraBaseRadius$
	@tempScaleSize *= 2 
	@tempBaseSize *= 2
	@tempScaleSize /= #$tempBaseSize$
	%scale = #$tempScaleSize$
	@scale /= #$tempBaseSize$
	%rescaleFactor = 1
	// Scale the node positions
	@node_stack_top[1,,] *= #$scale$
	@node_stack_bottom[1,,] *= #$scale$
	
	// Save the top node position. Everything will shift by this amount
	// to move the top node to position 0. PF starts the fairing
	// at height 0.
	%tempShift = #$node_stack_top[1,,]$
	// Part specific adjustment
	@tempShift += #$extraNodeShift$
	
	// Scale and adjust model position
	@MODEL
	{
		%position = 0.0, 0.0, 0.0
		@position[1,,] -= #$../tempShift$
		%scale = #$../scale$, $../scale$, $../scale$
	}
	
	// Adjust node positions
	@node_stack_top[1,,] -= #$tempShift$
	@node_stack_bottom[1,,] -= #$tempShift$
	%node_stack_top1   = 0.0, 3.0, 0.0, 0.0, 1.0, 0.0, 2
	
	node_stack_connect01 = 0.5, 0.000, 0.0, 0.0, 1.0, 0.0, 0
	node_stack_connect02 = 0.5, 0.000, 0.0, 0.0, 1.0, 0.0, 0
	node_stack_connect03 = 0.5, 0.000, 0.0, 0.0, 1.0, 0.0, 0
	node_stack_connect04 = 0.5, 0.000, 0.0, 0.0, 1.0, 0.0, 0
	
	MODULE
	{
		name = ProceduralFairingBase
//		baseSize = 1.15
//		sideThickness = 0.05
//		verticalStep = 0.1
	}
	
	MODULE
	{
		name = KzNodeNumberTweaker
		nodePrefix = connect
		maxNumber = 4
		numNodes = 2
//		radius = 0.625
		shouldResizeNodes = False
	}

	MODULE
	{
		name = ProceduralFairingAdapter
		baseSize = 3.75
		topSize  = 2.5
		height=3
		extraHeight = 1.90
		costPerTonne=1000
		specificMass=0.0064, 0.0130, 0.0098, 0
		specificBreakingForce =6050
		specificBreakingTorque=6050
		dragAreaScale = 1.5
	}
	
	MODULE
	{
		name = ModuleDecouple
		ejectionForce = 0
		explosiveNodeID = top1
	}
	
	MODULE
	{
		name = KzFairingBaseShielding
	}
	
	!MODULE[ModuleProceduralFairing] {}
	!MODULE[ModuleCargoBay] {}
}

@PART[bluedog*,Bluedog*]:HAS[@MODULE[ModuleProceduralFairing]]:AFTER[Jso_Bdb_PF]:NEEDS[ProceduralFairings]
{
	!extraNodeShift = delete
	!extraBaseRadius = delete
	!tempBaseSize = delete
	!tempScaleSize = delete
	!tempShift = delete
}
